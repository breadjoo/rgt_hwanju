name: Deploy to Amazon EC2

on:
  push:
    branches: [ "main" ]
    paths:
      - 'server/**'
      - '.github/workflows/deploy-backend.yml'

jobs:
  deploy:
    name: Deploy Spring Boot
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check Secrets
        run: |
          echo "DOCKER_USERNAME is set as: ${{ secrets.DOCKER_USERNAME }}"

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build & Push (multi-stage)
        uses: docker/build-push-action@v6
        with:
          context: /server
          file: ./server/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_REPO }}:latest
          no-cache: true

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          envs: GITHUB_SHA
          script: |
            echo " 기존 컨테이너 중지 및 삭제"
            sudo docker ps -q --filter "name=backend" | grep -q . && sudo docker stop backend && sudo docker rm backend || echo "No existing backend container."

            echo " Docker 이미지 및 컨테이너 정리"
            sudo docker container prune -f
            sudo docker image prune -f
            sudo docker image rm -f ${{ secrets.DOCKER_REPO }}:latest || echo "backend 이미지 없음"

            echo " 최신 Docker 이미지 pull"
            sudo docker pull ${{ secrets.DOCKER_REPO }}:latest

            echo " docker compose up"
            sudo docker compose up -d --build

            echo " docker ps 확인용 로그"
            sudo docker ps -a
